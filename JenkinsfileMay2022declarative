pipeline{

//agent any

agent{
label "nodes"
}


parameters {
  choice choices: ['development', 'master', 'qa'], description: 'Select Branch Name', name: 'BranchName'
}



tools{
maven "maven3.8.5"
}

triggers {
  pollSCM('* * * * *')
   //cron('* * * * *')
}

options {
  timestamps()
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
}


stages{

    //Get the code from GitHub
    stage('CheckoutCode'){
	steps{
	    slacknotifications("STARTED")
	git branch: "${params.BranchName}", credentialsId: 'c8718ca7-913c-4710-8012-fe46033e1aef', url: 'https://github.com/sandisoft/maven-web-application.git' 
	}
	}
  
  //Do the build
  stage('Build'){
  steps{
  sh "mvn clean package"
  }
  }
  
//Execute SOnarQube Report
  stage('ExecuteSonarQubeReport'){
  steps{
  sh "mvn sonar:sonar"
  }
  }
  
  //Upload Artifacats into Nexus repo
  stage('UploadArtifactsintoNexus'){
  steps{
  sh "mvn deploy"
  }
  }
  
  //Deploy Application into Tomcat Server
  stage('DeployAppIntoTomcatServer'){
  steps{
  sshagent(['1f4c0eb8-4dfb-4ceb-9afa-1fe16906d95a']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.233.155.118:/opt/apache-tomcat-9.0.64/webapps/"
  }
  }
  }
  
  
}//stages closing

post {
  success {
    slacknotifications(currentBuild.result)
  }
  failure {
   slacknotifications(currentBuild.result)
  }
}


}//Pipeline closing


def slacknotifications(String buildStatus = 'STARTED') {
 
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFF000'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}




